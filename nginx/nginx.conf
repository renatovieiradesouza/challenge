user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # Configuração de cache
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=60m;
    proxy_temp_path /var/cache/nginx/temp;

    server {
        listen 8081;
        server_name localhost;

        # Aplicação 1 - Go (cache de 10 segundos)
        location /app1/ {
            proxy_pass http://app1:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache app_cache;
            proxy_cache_valid 200 10s;
            add_header X-Proxy-Cache $upstream_cache_status;
        }

        # Aplicação 2 - Node.js (cache de 1 minuto)
        location /app2/ {
            proxy_pass http://app2:5001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache app_cache;
            proxy_cache_valid 200 1m;
            add_header X-Proxy-Cache $upstream_cache_status;
        }
    }
}

